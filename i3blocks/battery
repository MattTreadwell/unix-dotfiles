#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).
#
# The color will gradually change for a percentage below 85%, and the urgency
# (exit code 33) is set if there is less that 5% remaining.

use strict;
use warnings;
use utf8;

my $acpi;
my $status;
my $percent;
my $full_text;
my $short_text;
my $intbat;
my $full;
my $threequarters;
my $half;
my $quarter;
my $empty;

#declare battery percentage levels
$full = 100;
$threequarters = 63;
$half = 33;
$quarter = 75;
$empty = 30;

# read the first line of the "acpi" command output
open (ACPI, 'acpi -b |') or die "Can't exec acpi: $!\n";
$acpi = <ACPI>;
close(ACPI);
# fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
	die "$acpi\n";
}

$status = $1;
$percent = $2;
$intbat = 0;

#lazy way of enabling dual battery support
#this switches battery data if the first one dies
#if ($percent < 5) {
if ($status eq 'Unknown') {
open (ACPI, 'acpi -b | grep -n 1 |') or die "Can't exec acpi: $!\n";
$acpi = <ACPI>;
close(ACPI);
if ($acpi !~ /: (\w+), (\d+)%/) {
	die "$acpi\n";
}
$status = $1;
$percent = $2;
$intbat = 1;
}
#if $intbat=1 that means the internal battery is being used

#Identify battery in output eventually gets overwritten by icons
if ($intbat) {
        $full_text = 'Int '
} else {
        $full_text = 'Ext '
}

#shows when fully charged (usually shows "int battery at ~95%") helps avoid clutter
if ($full_text eq 'Int ' && $percent > 90 && $status ne 'Discharging') {
        $full_text= '  Charged';         
        $short_text = $full_text;
        print "$full_text\n";
        print "$short_text\n";
        print "#A8FF00\n";
        exit 0;
}

#icon for charging/discharge or if battery is really low or full and to identify which battery
if ($percent < $empty && $intbat) {
	$full_text = ' ';
} elsif ($percent < $quarter && $intbat) {
	$full_text = ' ';
} elsif ($percent < $half) {
	$full_text = ' ';
} elsif ($percent < $threequarters) {
	$full_text = ' ';
} elsif ($percent < $full) {
	$full_text = ' ';
} 

#ignores percentage based icons if charging
#if ($status eq 'Charging') {
#       $full_text = '⮒ ';
#       $short_text = $full_text;
#}
#this has been replaced in favor of coloring the battery yellow to retain percentage based icons

#adds the percent of battery
$full_text .= "$percent%";

$short_text = $full_text;

#this adds the estimated time to die/charge
#if ($acpi =~ /(\d\d:\d\d):/) {
#	$full_text .= " ($1)";
#}

# print text
print "$full_text\n";
print "$short_text\n";

#add coloring to output
if ($intbat && $status eq 'Discharging' && $percent < $empty) { print "#FF0000\n"; } #for very low battery
elsif ($status eq 'Charging') { print "#FFFF00\n";} #for charging

exit(0);
